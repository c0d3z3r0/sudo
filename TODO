TODO list (most will be addressed in sudo 2.0)

01) Redo parsing to be more like op(8) with true command aliases where
    can specify uid, gid(s) and part/all of the environment.

02) Add a SHELLS reserved word that checks against /etc/shells.

03) Make the sudoers file accessible via NIS, NIS+.

04) Add a -h (?) flag to sudo for a history mechanism.

05) Add Prog_Alias facility (Prog_Alias VI = /usr/secure/bin/vi +args).

06) Add generic STREAMS support for getting interfaces and netmasks.

07) Add support for "safe scripts" by checking for shell script
    cookie (first two bytes are "#!") and execing the shell outselves
    after doing the stat to guard against spoofing.  This should avoid
    the race condition caused by going through namei() twice...

08) Should be able to mix Cmnd_Alias's and command args.  Ie:
	pete   ALL=PASSWD [A-z]*,!PASSWD root
    where PASSWD was defined to be /usr/bin/passwd.
    This requires the arg parsing to happen in the yacc grammer.
    At the very least, commands and args have to become separate
    tokens in the lexer.

09) Add a per-tty restriction?  Ie: only can run foo from /dev/console.

10) Add test for how to read ether interfaces in configure script

11) Use strtol() and strtoul(), not atoi()

12) Implement date_format and log_format options.

13) Add support for: Default:user@host

14) Some people want to be able to specify a special password in sudoers
    in addition or instead of the normal one.  The best argument for
    this so far is to be able to use separate passwords for the
    target users that are not the passwd file ones.

15) Add support for trusted users.  E.g. allow user to run a certain
    command regardless of what dir it is in if it is owned by the
    trusted user.

16) Add a flag similar to '-l' but that spits out sudo commands in
    a format suitable for cut & paste into sudoers.

17) Someone wants a recursive version of the dir specifier.  Ie:
    SOME_MODIFIER:/usr/local/ to allow anything under /usr/local to be run.

18) An option to set the shell to the target user would make sense.
    See other target user-related issues above.

19) Add an option (-D) to dump the defaults after the sudoers file
    has been parsed.  Should only be available to root and should
    allow a -u user modifier.  Maybe dump all of sudoers?

20) Allow /etc/sudoers to be a symlink but require the parent dir to
    be root-owned and not writable by anything else.  Should really
    traverse the tree to the root doing this.

21) Improve interfaces.c STREAMS code (see ntpd's ntp_io.c for hints)

22) Wildcard support for user and group names? (netgroup too?)

23) If root_sudo is off, still allow sudo -u to non-root users?

24) For AIX, use setpenv() and setpcred() if they exist
    http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/basetrf2/setpenv.htm
    http://publib16.boulder.ibm.com/pseries/en_US/libs/basetrf2/setpcred.htm

25) Add an insult_path variable that is intialized to "builtin" but that
    can point to other files containing an insult count as the first
    line and that have a constant record length (sparse files) for
    easy seeking.

26) Some way of using a new pty for the program run via sudo would prevent
    access to the caller's /dev/tty (but probably makes job control tricky).

27) Maybe have a database of checksums that commands are verified against.
    Basically replace the st_ino/st_dev check with a checksum lookup.

28) Look into testing writability of a file via sudoedit *before* doing
    the edit; e.g., try opening with O_APPEND.

29) Add Makefile.in bits to autogenerate Solaris and Irix packages

30) Add a session mode where sudo allocates a pty and logs everything
    that occurs ala script(1).

31) Use pam_open_session() and pam_close_session() (requires a persistent
    sudo process to call pam_close_session()).  Maybe add xauth support for
    the non-pam case?

32) Add substitution mechanism in sudoers to subst, e.g. editors for sudoedit

33) Move prototypes to extern.h?

34) Get rid of VALIDATE_NOT_OK and just set/clear VALIDATE_OK

35) visudo -c should also sanity check aliases

36) Use AC_CHECK_DECLS for systems w/o proper prototypes?  Maybe errno too?

37) Flesh out testsudoers and fix glob/opendir issues.  Use custom netgroup
    code too?

38) Think some more about giving admins a way to test commands for a user
    on a specific host with a different sudoers file.

39) Add nsswitch.conf parsing to LDAP support.

40) Refactor duplicated code in ldap.c into wrapper functions.

41) Return command from command_matches() instead of setting safe_cmnd directly.

42) Roll visudo into sudo ala sudoedit.

43) Add ticket file to ticket dir in non-tty tickets case so we
    can mix tty and non-tty ticket schemes.

44) Use ldap_get_values_len() instead of ldap_get_values() for
    OpenLDAP (what about others?)

45) Add support for NOEXEC w/ 64-bit AIX executables.
    http://publib.boulder.ibm.com/infocenter/pseries/v5r3/index.jsp?topic=/com.ibm.xlf91a.doc/xlfug/comp64.htm

46) Revisit debian fqdn diffs.

47) Add gettext() support.  Can borrow some translations from PAM.

48) Convert the other capitalized files into .pod so we can get decent html
    form them?  E.g. README, etc.  E.g.
	pod2text -l -i0 history.pod > HISTORY
	pod2html --noindex history.pod > history.html

49) Use mkstemp() for visudo temp files?  Also re-examine locking.

50) Run sudo thorugh valgrind

51) Make -a and -c options in sudo.pod only visible when available.
    Could use an nroff register combines with configure substitute magic.
    Note that configure substitution runs on the .man.in file not the
    .pod file.

52) Consolidate line wrap code.

53) How can we distinguish between a bare '\\' and one that is escaping
    glob chars?  Right now we convert \\ -> \ in the lexer which
    causes the confusion.

54) For LDAP entries, should be able to parse the per-command options
    since they may affect the outcome (e.g. default_runas).

55) Better LDAP documention.  Perhaps a sudo-ldap man page.

56) Improve nss error handling.  Consider removing sources that
    can't be opened.  Need to keep in mind ret_notfound.

57) lookup method should only return VALIDATE_NOT_OK if matched !command.
